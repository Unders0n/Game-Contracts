Публикация контрактов:

0) В ремиксе на вкладке Settings ставим галочку Enable optimization. Она включает оптимизации компилятора, что снижает количество газа, необходимое для публикации.

1) Компилируем MonsterCore. Деплоим MonsterCore, в параметр конструктора передаётся адрес backupCEO, т.е. неизменяемый запасной адрес владельца контракта. На роли CEO и COO при публикации назначается адрес, с которого происходит деплой. На роль CFO по-умолчанию не назначается никто, её нужно назначать отдельно функцией setCFO. В контракте используется библиотека функций, поэтому деплой происходит в два шага: сначала деплоится библиотека (за примерно 120к газа), remix дожидается завершения транзакции, после чего запускает транзакцию деплоя самого контракта. 

2) Деплоим SaleClockAuction, у него в конструкторе два параметра. Первый - это адрес главного контракта (Core). Второй - величина комиссии, взимаемой контрактом при проведени сделок. Комиссия задаётся числом от 0 до 10000, где 10000 соответствует 100%. Т.е. для 3.5% следует указывать число 350. 
* SaleClockAuction находится в файле MonsterBitSaleAuction.sol

3) Деплоим SiringClockAuction, его параметры аналогичны предыдущему пункту.

4) Деплоим MonsterFood. Его единственный параметр в конструкторе - это адрес MonsterCore.  

5) Деплоим MonsterBattles. Его единственный параметр в конструкторе - это адрес MonsterCore.  

6) Деплоим MonsterStorage. Его единственный параметр в конструкторе - это адрес MonsterCore.  

7) Деплоим MonsterConstants. Параметров нету. Если в него не вносились изменения, его можно оставить от предыдущих итераций. Т.е. не обязательно его передеплоивать, можно оставить старый. 

8) Компилируем и деплоим MonsterGenetics. Аналогично, если изменения не вносились, то его можно не деплоить заново и оставить предыдущий вариант. 


После того, как все контракты опубликованы, нужно вызвать несколько функций контракта MonsterCore:
1) setBattlesAddress (передать адрес контракта MonsterBattles)
2) setGeneScienceAddress (передать адрес контракта MonsterGenetics)
3) setMonsterConstantsAddress (передать адрес контракта MonsterConstants)
4) setMonsterFoodAddress (передать адрес контракта MonsterFood)
5) setMonsterStorageAddress (передать адрес контракта MonsterStorage)
6) setSaleAuctionAddress (передать адрес контракта SaleClockAuction)
7) setSiringAuctionAddress (передать адрес контракта SiringClockAuction)
8) unpause() - без параметров, запуск контракта

Для того, чтобы бэкэнд мог публиковать монстров, нужно вызвать функцию setCOO, передав ей адрес кошелька бэкэнда. 




Для сбора средств с контракта необходимо:

1) Назначить CFO, для этого необходимо вызвать функцию setCFO контракта MonsterCore, в которую передать адрес кошелька, которому будет позволено снимать средства с контрактов.
2) От имени CFO вызвать функцию withdrawDependentBalances - она соберёт средства с подчинённых контрактов (аукционов и кормления) на главном
3) От имени CFO вызвать функцию withdrawBalance - она переведёт  баланс с основного контракта на адрес CFO.
